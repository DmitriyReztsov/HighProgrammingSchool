1. Сервис, осуществляющий запись о подписании документа, зависит от внешнего сервиса, предоставляющего такую подпись. Сервис (ХеллоСайн, например) предоставляет АПИ с методами, работа которых является фактической причиной удачной или неудачно работы нашего сервиса. Свойства "запрос на подпись" signature_request и "подписанный документ" signed_document зависят от работы этого стороннего сервиса.

Семантика:
- Зависимость сборки. Установлена ли в окружении библиотека для работы с АПИ ХеллоСайн. Если посылаем запрпосы на ендпойнты - то более общее: установлена ли библиотека, формирующая запросы (requests, например).
- Зависимость времени выполнения. Работает ли установленная и импортированная библиотека ХеллоСайн ожидаемым способом. Выстрачались ситуации, когда в документации описывалось устаревшее поведение или наоборот - документация описывала поведение следующей версии, а сама библиотека на выбранном языке еще не была обновлена.
- Функциональные требования. При переключении на другой сервис (ДокуСайн, например) - будет ли работать наш внутренний сервис ожидаемым образом и проставлять подписи на документах? С учетом того, что АПИ сервисов разные и, значит, нужно будет предусмотреть еще один слой для работы с АПИ разных сервисов.

Ключевые свойства. 
В нашем случае объект signature_request и поле документа signed_document зависят от работы сторонних сервисов.

Пространство допустимых изменений.
Дополнения в ответы - мы ищем наши данные по зафиксированным ключам в ответах, дополнительные поля нам не помешают.
Новые ендпойнты.
Дополнительные необязательные параметры в запросах.
Пространство имен библиотеки, в частности - методы, которые уже используются не должны переименовываться или исчезать.
Статусы ответов.


2. Поле модели, содержащее пдф файл, созданный из шаблона автоматически сервисом - зависит от работы этого сервиса.

Семантика:
- Зависимость сборки. Оба модуля в находятся в одном проекте. В Питоне и Джанге зависимость может проявиться в виде цикличного импорта.
- Зависимость времени выполнения. Как код в сервисе исполняется и соответствует ли заявленной спецификации. Проверяем тестами, например.
- Функциональные требования. До этого сервиса использовался другой, который обрабатывал иной входной набор данных (было - текст или html, стало - документ в вформате docx), но требование к сервису остались те же - сервис должен вернуть пдф документ с коллонтитулами.

Ключевые свойства.
Поле file модели Appendix зависит от работы сервисов, формирующих пдф файл.

Пространство допустимых изменений.
Сервисы могут изменяться (и изменялись) внутри себя любыми способами, если их результат будет пдф файл, содержащий переданные текст и коллонтитулы.
Т.е. требование наличия метода get_pdf_file() с возвратом байтового объекта с содержимым файла - единственая супер-спецификация для такого сервиса.

3. Можно развернуть эту тему и описать зависимость сервиса по формированию пдф файла от сторонних библиотек, обрабатывающих файлы и формирующих пдф.
Например, возьмем свойство сервиса template_doc_content

def create_pdf_file_from_template(self, appendix_contract: AppendixContractBase) -> None:
    template_doc_content = self._get_doc_content(self.template.uuid)
    self.document = Document(template_doc_content)
    ...

def _get_doc_content(self, document_uuid: str) -> BytesIO:
    file_response = document_storage_interface.download_latest_document(document_uuid)
    if file_response.status_code != status.HTTP_200_OK:
        logger.error(
            "Error occurred during downloading document content",
            prefix="[AppendixService._get_doc_content]",
            document_uuid=document_uuid,
        )
        raise BadRequest(f"Error occurred during downloading document content. Document UUID: {document_uuid}")

    return BytesIO(file_response.content)

Оно в конечном итоге зависит от загрузки документа из стороннего сервиса.

Семантика:
- Зависимость сборки. Второй сервис (document_storage_interface) установлен в той же сети контейнеров, в отдельном контейнере. Соответственно, зависимость может проявляться при неправильном запуске контейнеров. Но если мы говорим только о запуске текущего сервера, то незапущенный второй контейнер в процессе сборки себя никак не проявит (для Джанги). Тогда для Питона-Джанги будет справедливо замечание про заивисмость от импортов этого интерфейса - импорт не должен создавать циклов.
- Зависимость времени выполнения. Поскольку контейнер может быть не запущен, то в рантайме это вызовет ошибку при попытке обратиться к нему. Также возможне возврат ошибки в случае недоступности ресурса (неверный uuid документа или повреждения файла или неправильные настройки домена / ендпойнта)
- Функциональные требования. Библиотека должна вернуть хранящийся файл в виде байтового объекта. На стороне второго сервиса обработка может быть любой, можно даже сменить сам сервис. Важно, чтобы он поддерживал те же методы для получения этого файла и был подключен к той же базе данных.

Ключевые свойства.
file_response зависит от работы стороннего сервиса, от него уже зависит работа всего остального сервиса в формировании пдф.

Пространство допустимых изменений.
Можно добавлять новые ендпойнты, но не модифицировать уже задействованные в плане ответа и методов запроса. То, как имено будет получен документ на стороне стороннего сервиса - также не влияет на нас, если возвращен будет байтовый объект.
Суперспецикация получается - наличие метода download_latest_document, возвращающего байтовый объект файла с переданным uuid

4. Зависимость фронта от формата ответа бэка и наоборот.

Семантика:
- Зависимость сборки. При сборке фронтенда и бэкенда, если тесты прошли (а они в том случае прошли, поскольку каждый ожидал, что запрос и ответ будут в своих форматах), то эта зависимость не проявится.
- Зависимость времени выполнения. Вот тут она прояявится при попытке обратиться на этот ендпойнт, на котором есть различия в форматах и далее - в зависисмости от того, как будут обрабатываться ошибки.
- Функциональные требование. Требуется, чтобы форматы запрососв и ответов буди согласованы на уровне спецификации.

Ключевые свойства.
Свойства, которые должны быть получены из запросов и ответов. Например, свойство data, которое ожидается  виде словаря, а приходит в виде списка словарей.

Пространство допустимых изменений.
Со стороны фронта прийти может дополнительные поля в словаре, если фронт не ожидает, что они будут обработаны. Со стороны бэка также в ответе могут оказаться дополнительные поля, которые могут быть проигнорированы. Но поля, определенные спецификацией должны содержаться в запросе и ответе.
Таким образом, требования к спецификации - формат (словарь) и набор обязательных полей.
