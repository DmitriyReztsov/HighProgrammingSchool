В Питоне модуль - отдельный файл, который может содержать исполняемый код и определения функций.
Исполняемый код будет выполнен при инициализации модуля, определения функций будут добавлены в пространство имен модуля.
Каждый модуль имеет свое пространство имен, которое используется как глобальное для всех функций, опреденных в модуле.

Модуль, может рассматриваться как объект. И как все объекты в Питоне имеет свои аттрибуты, прописанные в пространстве
имен. Строго говоря языком документации - ссылки на имена в модуле это ссылки на аттрибуты: в выражении modname.funcname 
modname это объект модуля, funcname - аттрибут модуля. В этом случае происходит связывание аттрибута модуля с лобальным 
именем, определенным в этом модуле, поскольку модуль и аттрибут делят одно пространство имен.

Пространства имен создаются в разное время и имеют разную продолжительность жизни. Пространства имен, содержащие 
built-in имена создаются при старте интерпретатора Питона и никогда не удаляются.
Глобальные пространства имен для модуля создаются при инициализации модуля (когда определение модуля считывается) и обычно 
не удаляются до завершения работы интерпретатора.
Локальные пространства имен для функций создаются, когда эти функции вызываются и удаляются (точнее - забываются) при 
завершении работы функции.


С этой точки зрения, если рассматривать класс в Питоне как модуль, то можно увидеть общие черты:
- класс тоже объект
- также предоставляет свое пространство имен и содержит определения функций
- имеет свои аттрибуты
- имеет схожий синтаксис вызова через объект класса (Class.attr, Class.method)
- также может быть импортирован

Есть и различия. Питон считает модуль как файл и импортировать из файла-модуля определени функции или класса можно,
а импортировать из класса (который мы рассматриваем как модуль) его отдельный аттрибут - нельзя. Видимо, это связано с 
тем, что класс сам по себе прописывается в глобальной области модуля, который содержит этот класс, и не имеет свою 
глобальную область имен.