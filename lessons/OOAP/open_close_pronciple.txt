class Document(ABC):
    @abstractmethod
    def sign(self):
        ...

class Contract(Document):
    def sign(self):
        # via pdf
        ...

class ElDocument(Document):
    def sign(self):
        # via email
        ...

class ElContract(ElDocument):
    def sign(self):
        super().sign()
        ...

Класс Document определяет абстрактный класс sign (примерный аналог virtual из С++), который должен быть
определен в класах-наследниках. Таким образом мы закрываем само определение метода в базовом классе,
но при этом оставляем метод открытым для изменения в классах-наследниках.
В Питоне закрытость класса - понятие на уровне договоренности, и, например, наследники класса электронного
документа ElDocument могут также реализовывать свои расширения для метода sign. Важно, чтобы изменения,
вносимые в классах наследниках, не влияли на других наследников. Для этого необходимо принять, что на 
уровне класса ElDocument метод sign должен быть закрыт от изменений.